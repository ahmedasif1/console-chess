void reset( int sr,int sc,int er,int ec,char a );
char storage( int sr,int sc,int er,int ec );
bool not_checked( int sr,int sc,int er,int ec,bool );
bool isking( int x,int y );
void findking( int bari, int &x,int &y );
void turnchange( int & bari );
void color( int k );
bool clearpath( int sr,int sc,int er,int ec );
bool endpoint( int er,int ec,int );
bool withinbound( int sr,int sc,int er,int ec );
bool legal_pawn( int sr,int sc,int er,int ec );
bool pawnnotmoved( int sr,int sc );
bool legal_queen( int sr,int sc,int er,int ec );
bool legal_king( int sr,int sc,int er,int ec );
bool legal_bishop( int sr,int sc,int er,int ec );
bool legal_rook( int sr,int sc,int er,int ec );
bool legal_knight( int sr,int sc,int er,int ec );
bool piece_identifier( int bari,int,int );
bool is_black_piece( char a );
bool is_white_piece( char a );
bool is_empty( char );
bool diagonalmove( int sr,int sc,int er,int ec );
bool vermove( int sr,int sc,int er,int ec );
bool hormove( int sr,int sc,int er,int ec );
void displaychars();
void printinboard( char a,int x,int y ,int,int);
void initialize();
void print_board_2();
void h_line( int x, int y, int length );
void print_box( int x, int y );
void setXY( int x, int y );
void v_line( int x, int y, int length );
void movepiece( int sr ,int sc,int er,int ec );
int movejudge( int,int );
void input_from_user( int sr,int sc,int er,int ec );
void resizescreen( int x,int y );
void sideline();
bool promotion( int turn, int er );
void caseup( char &a );
void casedown( char &a );
bool ispawn( int x,int y );
void askprom( int x,int y );
bool sourcemove( int turn,int y,int x );
bool stalemate( int turn );
void aftermove( int sr,int sc,int er ,int ec );
void refreshpiece( int sr,int sc,int er,int ec );
bool legal_move_piece( int sr,int sc,int er, int ec ,bool type);
bool legal_queen( int sr,int sc,int er,int ec );
bool legal_king( int sr,int sc,int er,int ec ,bool );
bool legal_bishop( int sr,int sc,int er,int ec );
bool legal_rook( int sr,int sc,int er,int ec ,bool);
bool legal_knight( int sr,int sc,int er,int ec );
void enddecision( int sr,int sc,int er ,int ec );
void startgame();
bool destinationmove(int er,int ec,int turn );
bool checkmate(int sr,int sc,int er,int ec);
bool nestedfor(int &r,int &c,int lim);
bool draw();
void sort_string(char str[]);
void savegame();
void menu();
void rep_moves(int sr,int sc,int er,int ec);
void replay();
bool rook_castle(int sr,int sc,int er,int ec);
bool castling_assistant(int sr,int sc,int ec );
void colorcontrol();
void colordaboard(int srow,int scol);

extern int turn;
